[Prettier]
Nas configurações do Editor (CTRL + ,), habilitar a opção "Editor: Format On Save", faz com que o prettier formate o arquivo quando ele for salvo.
Selecionar o Prettier na opção "Editor: Default Formatter".
Habilitar opção "Prettier: Require Config" para fazer com que o Prettier só funcione quando existir o arquivo .prettierrc
[Yarn]
yarn init -y //Iniciar o projeto
yarn add express //Instala o express (equivalente ao npm install express)
yarn start //Roda o script start (definido nos scripts do package json)
yarn add nodemon -D //Adiciona o nodemon e o -D indica que é só na parte de desenvolvimento
yarn add sucrase -D //Irá instalar a lib sucrase que permite importarmos o express com "import" em vez de criar uma constante para isso. -D indica que é só na parte de desenvolvimento
yarn add mongoose //Adicionar suporte ao mongoDB
yarn add multer //biblioteca para ajudar enviar imagens nas requisições
yarn add cors //adiciona o cors no projeto
yarn remove mongoose//similiar ao npm uninstall mongoose
yarn add yup //biblioteca para fazer validações
yarn add eslint -D //instalar eslint para validar se o seu código segue o padrão definido. -D para instalar apenas no ambiente de desenvolvimento.
yarn eslint --init //Iniciar eslint
yarn //baixa as depêndencias do projeto equivalente npm install
yarn add sequelize //Instala ORM Sequelize
yarn add sequelize-cli -D //Instala interpretador de linha de comando no ambiente de desenvolvimento
yarn sequelize migration:create --name=create-users
yarn sequelize db:migrate //executar a ultima migration criada
yarn sequelize db:migrate:undo //desfaz a ultima migration]
yarn sequelize db:migrate:undo:all //desfaz todas as migrations
yarn add bcrypt js
yarn add jsonwebtoken
[Conceitos]
Middlewares - Todo tipo de função que está entre o pedido da requisição e a resposta final para o front end.
[git/github]
Fork - É criar uma cópia do repositório na sua conta, pois você não consegue fazer commit no repositório original, apenas na sua conta.
Depois clonar o repositório da nossa conta na nossa maquina.
git diff README.md // Ve as mudanças
git push origin HEAD // Da o push na branch que eu estou agora (o push irá para o meu repositório forkado)
agora crio um pull request com a alteração pela interface do github, ai posso selecioanr de onde (minha master provavelmente) para onde (master do repositório original provavelmente)
git checkout -b funcionalidade_x // cria um branch chamado "funcionalidade_x" e faz o checkout.
git branch -d funcionalidade_x // deleta um branch
git push origin funcionalidade_x // envia o branch para o repositório remoto
git diff <branch origem> <branch destino>
git reflog //Lista de commits
git reset HEAD@{2} //volta para este commit em específico
git remote -v //Verificar repositório remoto
git checkout -- .eslintrc.js //Desfazer as alterações não commitadas do arquivo .eslintrc.js
[ESLINT]
Depois de dar o eslint --init e instalar por NPM, deletar o arquivo package-lock.json e executar yarn para baixar as depêndencias do eslint pelo yarn
CTRL + SHIFT + P e ir em "Open Settings (JSON)" e adicionar eslint.autoFixOnSave: true e eslint.validate com as configurações (Aula 27)
[Lembretes]
Configurar o nodemon.json para rodar o sucrase (aula 29)



